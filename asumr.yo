                            | # Execution begins at address 0 
0x000:                      |     .pos 0 
0x000: 30f40002000000000000 |     irmovq stack, %rsp      # Set up stack pointer  
0x00a: 803800000000000000   |     call main       # Execute main program
0x013: 00                   |     halt            # Terminate program 
                            | 
                            | # Array of 4 elements
0x018:                      |     .align 8    
0x018:                      | array:
0x018: 0d000d000d000000     |     .quad 0x000d000d000d
0x020: c000c000c0000000     |     .quad 0x00c000c000c0
0x028: 000b000b000b0000     |     .quad 0x0b000b000b00
0x030: 00a000a000a00000     |     .quad 0xa000a000a000
                            | 
0x038:                      | main:
0x038: 30f71800000000000000 |     irmovq array,%rdi   
0x042: 30f60400000000000000 |     irmovq $4,%rsi
0x04c: 805600000000000000   |     call rsum       # rsum(array, 4)
0x055: 90                   |     ret
                            | 
                            | # C version of rsum
                            | #
                            | # long rsum(long *start, long count) {
                            | #    if (count == 0) {
                            | #        return 0;
                            | #    }    
                            | #    return *start + rsum(start+1, count-1);
                            | # }
                            | 
                            | /* $begin rsum-ys */
                            | # long rsum(long *start, long count)
                            | # start in %rdi, count in %rsi
0x056:                      | rsum:
0x056: 6300                 |     xorq %rax, %rax 
0x058: 6266                 |     andq %rsi, %rsi    
0x05a: 739400000000000000   |     je return 
0x063: a03f                 |     pushq %rbx 
0x065: 30f80800000000000000 |     irmovq $8, %r8     # constant 8
0x06f: 30f90100000000000000 |     irmovq $1, %r9     #constat 1
0x079: 50370000000000000000 |     mrmovq(%rdi), %rbx #move rdi to rbx 
                            |     
0x083: 6087                 |     addq   %r8, %rdi     # start++
0x085: 6196                 |     subq   %r9, %rsi     # count--.  Set CC
                            |     
0x087: 805600000000000000   |     call rsum 
0x090: 6030                 |     addq %rbx, %rax 
0x092: b03f                 |     popq %rbx       # Restore callee-saved register
                            |  
                            |     
0x094:                      | return:
0x094: 90                   |     ret
                            | /* $end rsum-ys */
                            | 
                            | # The stack starts here and grows to lower addresses
0x200:                      |     .pos 0x200      
0x200:                      | stack:   
                            | 
